"""Alert informs users about important events."""

# AUTOGENERATED! DO NOT EDIT! File to edit: ../../../nbs/components/feedback/alert.ipynb.

# %% auto 0
__all__ = ['alert', 'alert_styles', 'alert_colors', 'alert_directions', 'test_alert_basic_examples', 'test_alert_styles_examples',
           'test_alert_colors_examples', 'test_alert_directions_examples']

# %% ../../../nbs/components/feedback/alert.ipynb 3
from cjm_fasthtml_tailwind.core.base import (
    SingleValueFactory, combine_classes
)
from cjm_fasthtml_tailwind.builders.scales import SimpleFactory, enums_to_simple_factory

from ...builders.colors import SemanticColorStatus
from ...builders.styles import OutlineStyle, DashStyle, SoftStyle

from fasthtml.common import Div
from fasthtml.jupyter import JupyUvi, HTMX
from ...core.testing import create_test_app, create_test_page, start_test_server
from ...core.themes import DaisyUITheme
from IPython.display import display

# %% ../../../nbs/components/feedback/alert.ipynb 5
alert = SingleValueFactory("alert", "Base alert container") # Base alert component

# %% ../../../nbs/components/feedback/alert.ipynb 7
alert_styles = enums_to_simple_factory(alert, [OutlineStyle, DashStyle, SoftStyle]) # Alert style variants

# %% ../../../nbs/components/feedback/alert.ipynb 9
alert_colors = enums_to_simple_factory(alert, [SemanticColorStatus], "Alert color variants using daisyUI semantic colors") # Alert color variants

# %% ../../../nbs/components/feedback/alert.ipynb 11
alert_directions = SimpleFactory(
    {
        "vertical": "alert-vertical",
        "horizontal": "alert-horizontal",
    },
    "alert directions (vertical, horizontal)"
) # alert directions

# %% ../../../nbs/components/feedback/alert.ipynb 13
def test_alert_basic_examples():
    """Test basic alert utilities."""
    # Basic alert
    assert str(alert) == "alert"
    
    # Button with modifiers
    assert str(alert.hover) == "hover:alert"
    assert str(alert.md) == "md:alert"
    assert str(alert.dark) == "dark:alert"

# Run the tests
test_alert_basic_examples()

# %% ../../../nbs/components/feedback/alert.ipynb 14
def test_alert_styles_examples():
    """Test alert style variants."""
    assert str(alert_styles.outline) == "alert-outline"
    assert str(alert_styles.dash) == "alert-dash"
    assert str(alert_styles.soft) == "alert-soft"

# Run the tests
test_alert_styles_examples()

# %% ../../../nbs/components/feedback/alert.ipynb 15
def test_alert_colors_examples():
    """Test alert color variants."""
    # All color variants
    assert str(alert_colors.info) == "alert-info"
    assert str(alert_colors.success) == "alert-success"
    assert str(alert_colors.warning) == "alert-warning"
    assert str(alert_colors.error) == "alert-error"
    
    # With modifiers
    assert str(alert_colors.info.hover) == "hover:alert-info"
    assert str(alert_colors.success.focus) == "focus:alert-success"

# Run the tests
test_alert_colors_examples()

# %% ../../../nbs/components/feedback/alert.ipynb 16
def test_alert_directions_examples():
    """Test alert direction utilities."""
    assert str(alert_directions.vertical) == "alert-vertical"
    assert str(alert_directions.horizontal) == "alert-horizontal"

# Run the tests
test_alert_directions_examples()
