"""Steps can be used to show a list of steps in a process."""

# AUTOGENERATED! DO NOT EDIT! File to edit: ../../../nbs/components/navigation/steps.ipynb.

# %% auto 0
__all__ = ['steps', 'step', 'step_icon', 'step_colors', 'steps_directions', 'test_steps_basic_examples',
           'test_step_colors_examples', 'test_steps_directions_examples']

# %% ../../../nbs/components/navigation/steps.ipynb 3
from cjm_fasthtml_tailwind.core.base import (
    SingleValueFactory, combine_classes
)
from cjm_fasthtml_tailwind.builders.scales import SimpleFactory, enums_to_simple_factory

from ...builders.colors import SemanticColorBrand, SemanticColorStatus

from fasthtml.common import Div
from fasthtml.jupyter import JupyUvi, HTMX
from ...core.testing import create_test_app, create_test_page, start_test_server
from ...core.themes import DaisyUITheme
from IPython.display import display

# %% ../../../nbs/components/navigation/steps.ipynb 5
steps = SingleValueFactory("steps", "Container of multiple step nodes") # Base steps component
step = SingleValueFactory("step", "A single step node") # step part
step_icon = SingleValueFactory("step-icon", "For custom icon inside step") # step icon part

# %% ../../../nbs/components/navigation/steps.ipynb 7
step_colors = enums_to_simple_factory(step, [SemanticColorBrand, SemanticColorStatus], "Step color variants using daisyUI semantic colors") # Step color variants

# %% ../../../nbs/components/navigation/steps.ipynb 9
steps_directions = SimpleFactory(
    {
        "vertical": "steps-vertical",
        "horizontal": "steps-horizontal",
    },
    "steps directions (vertical, horizontal)"
) # steps directions

# %% ../../../nbs/components/navigation/steps.ipynb 11
def test_steps_basic_examples():
    """Test basic steps utilities."""
    # Basic steps
    assert str(steps) == "steps"
    assert str(step) == "step"
    assert str(step_icon) == "step-icon"
    
    # steps with modifiers
    assert str(steps.hover) == "hover:steps"
    assert str(steps.md) == "md:steps"
    assert str(steps.dark) == "dark:steps"

# Run the tests
test_steps_basic_examples()

# %% ../../../nbs/components/navigation/steps.ipynb 12
def test_step_colors_examples():
    """Test step color variants."""
    # All color variants
    assert str(step_colors.neutral) == "step-neutral"
    assert str(step_colors.primary) == "step-primary"
    assert str(step_colors.secondary) == "step-secondary"
    assert str(step_colors.accent) == "step-accent"
    assert str(step_colors.info) == "step-info"
    assert str(step_colors.success) == "step-success"
    assert str(step_colors.warning) == "step-warning"
    assert str(step_colors.error) == "step-error"
    
    # With modifiers
    assert str(step_colors.primary.hover) == "hover:step-primary"
    assert str(step_colors.success.focus) == "focus:step-success"

# Run the tests
test_step_colors_examples()

# %% ../../../nbs/components/navigation/steps.ipynb 13
def test_steps_directions_examples():
    """Test steps direction utilities."""
    assert str(steps_directions.vertical) == "steps-vertical"
    assert str(steps_directions.horizontal) == "steps-horizontal"

# Run the tests
test_steps_directions_examples()
