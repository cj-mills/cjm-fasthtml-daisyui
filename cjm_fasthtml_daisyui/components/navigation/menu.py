"""Menu is used to display a list of links vertically or horizontally."""

# AUTOGENERATED! DO NOT EDIT! File to edit: ../../../nbs/components/navigation/menu.ipynb.

# %% auto 0
__all__ = ['menu', 'menu_title', 'menu_dropdown', 'menu_dropdown_toggle', 'menu_modifiers', 'menu_sizes', 'menu_directions',
           'test_menu_basic_examples', 'test_menu_modifiers_examples', 'test_menu_sizes_examples',
           'test_menu_directions_examples']

# %% ../../../nbs/components/navigation/menu.ipynb 3
from cjm_fasthtml_tailwind.core.base import (
    SingleValueFactory, combine_classes
)
from cjm_fasthtml_tailwind.builders.scales import SimpleFactory, enums_to_simple_factory

from ...builders.sizes import DaisyUINamedSize

from fasthtml.common import Div
from fasthtml.jupyter import JupyUvi, HTMX
from ...core.testing import create_test_app, create_test_page, start_test_server
from ...core.themes import DaisyUITheme
from IPython.display import display

# %% ../../../nbs/components/navigation/menu.ipynb 5
menu = SingleValueFactory("menu", "Base menu component for displaying a <ul> list of links vertically or horizontally") # Base menu component
menu_title = SingleValueFactory("menu-title", "Menu title part for styling a <li> as a title") # Menu title part
menu_dropdown = SingleValueFactory("menu-dropdown", "Menu dropdown part for the collapsible <ul> if you want to show it using JS") # Menu dropdown part
menu_dropdown_toggle = SingleValueFactory("menu-dropdown-toggle", "Menu part for the toggle to show/hide the menu-dropdown using JS") # Menu dropdown toggle part

# %% ../../../nbs/components/navigation/menu.ipynb 7
menu_modifiers = SimpleFactory(
    {
        "disabled": "menu-disabled",
        "active": "menu-active",
        "focus": "menu-focus",
        "dropdown-show": "menu-dropdown-show"
    },
    "Menu modifiers (disabled, active, focus, show dropdown)"
) # Menu modifiers

# %% ../../../nbs/components/navigation/menu.ipynb 9
menu_sizes = enums_to_simple_factory(menu, [DaisyUINamedSize], "Menu size variants from extra small to extra large") # Menu size variants

# %% ../../../nbs/components/navigation/menu.ipynb 11
menu_directions = SimpleFactory(
    {
        "vertical": "menu-vertical",
        "horizontal": "menu-horizontal",
    },
    "Menu directions (vertical, horizontal)"
) # Menu directions

# %% ../../../nbs/components/navigation/menu.ipynb 13
def test_menu_basic_examples():
    """Test basic menu utilities."""
    # Basic menu
    assert str(menu) == "menu"
    assert str(menu_title) == "menu-title"
    assert str(menu_dropdown) == "menu-dropdown"
    assert str(menu_dropdown_toggle) == "menu-dropdown-toggle"
    
    # menu with modifiers
    assert str(menu.hover) == "hover:menu"
    assert str(menu.md) == "md:menu"
    assert str(menu.dark) == "dark:menu"

# Run the tests
test_menu_basic_examples()

# %% ../../../nbs/components/navigation/menu.ipynb 14
def test_menu_modifiers_examples():
    """Test menu modifier utilities."""
    assert str(menu_modifiers.disabled) == "menu-disabled"
    assert str(menu_modifiers.active) == "menu-active"
    assert str(menu_modifiers.focus) == "menu-focus"
    assert str(menu_modifiers.dropdown_show) == "menu-dropdown-show"

# Run the tests
test_menu_modifiers_examples()

# %% ../../../nbs/components/navigation/menu.ipynb 15
def test_menu_sizes_examples():
    """Test menu size variants."""
    assert str(menu_sizes.xs) == "menu-xs"
    assert str(menu_sizes.sm) == "menu-sm"
    assert str(menu_sizes.md) == "menu-md"
    assert str(menu_sizes.lg) == "menu-lg"
    assert str(menu_sizes.xl) == "menu-xl"
    
    # With responsive modifiers
    assert str(menu_sizes.xs.sm) == "sm:menu-xs"
    assert str(menu_sizes.lg.md) == "md:menu-lg"

# Run the tests
test_menu_sizes_examples()

# %% ../../../nbs/components/navigation/menu.ipynb 16
def test_menu_directions_examples():
    """Test menu direction utilities."""
    assert str(menu_directions.vertical) == "menu-vertical"
    assert str(menu_directions.horizontal) == "menu-horizontal"

# Run the tests
test_menu_directions_examples()
