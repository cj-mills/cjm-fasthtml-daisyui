"""Dock (also know as Bottom navigation or Bottom bar) is a UI element that provides navigation options to the user. Dock sticks to the bottom of the screen."""

# AUTOGENERATED! DO NOT EDIT! File to edit: ../../../nbs/components/navigation/dock.ipynb.

# %% auto 0
__all__ = ['dock', 'dock_label', 'dock_sizes', 'test_dock_basic_examples', 'test_dock_modifiers_examples',
           'test_dock_sizes_examples']

# %% ../../../nbs/components/navigation/dock.ipynb 3
from cjm_fasthtml_tailwind.core.base import (
    SingleValueFactory, combine_classes
)

from cjm_fasthtml_tailwind.builders.scales import SimpleFactory, enums_to_simple_factory

from ...builders.sizes import DaisyUINamedSize

from fasthtml.common import Div
from fasthtml.jupyter import JupyUvi, HTMX
from ...core.testing import create_test_app, create_test_page, start_test_server
from ...core.themes import DaisyUITheme
from IPython.display import display

# %% ../../../nbs/components/navigation/dock.ipynb 5
dock = SingleValueFactory("dock", "Base dock component") # Base dock component
dock_label = SingleValueFactory("dock-label", "Text label for Dock Item") # Dock label

# %% ../../../nbs/components/navigation/dock.ipynb 9
dock_sizes = enums_to_simple_factory(dock, [DaisyUINamedSize], "Dock size variants from extra small to extra large") # Dock size variants

# %% ../../../nbs/components/navigation/dock.ipynb 11
def test_dock_basic_examples():
    """Test basic dock utilities."""
    # Basic dock
    assert str(dock) == "dock"
    assert str(dock_label) == "dock-label"
    
    # Dock with modifiers
    assert str(dock.hover) == "hover:dock"
    assert str(dock.md) == "md:dock"
    assert str(dock.dark) == "dark:dock"

# Run the tests
test_dock_basic_examples()

# %% ../../../nbs/components/navigation/dock.ipynb 12
def test_dock_modifiers_examples():
    """Test dock modifier utilities."""
    assert str(dock_modifiers.active) == "dock-active"

# Run the tests
test_dock_modifiers_examples()

# %% ../../../nbs/components/navigation/dock.ipynb 13
def test_dock_sizes_examples():
    """Test dock size variants."""
    assert str(dock_sizes.xs) == "dock-xs"
    assert str(dock_sizes.sm) == "dock-sm"
    assert str(dock_sizes.md) == "dock-md"
    assert str(dock_sizes.lg) == "dock-lg"
    assert str(dock_sizes.xl) == "dock-xl"
    
    # With responsive modifiers
    assert str(dock_sizes.xs.sm) == "sm:dock-xs"
    assert str(dock_sizes.lg.md) == "md:dock-lg"

# Run the tests
test_dock_sizes_examples()
