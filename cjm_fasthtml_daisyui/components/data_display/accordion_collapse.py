"""Accordion is used for showing and hiding content but only one item can stay open at a time. Collapse is used for showing and hiding content."""

# AUTOGENERATED! DO NOT EDIT! File to edit: ../../../nbs/components/data_display/accordion_collapse.ipynb.

# %% auto 0
__all__ = ['collapse', 'collapse_title', 'collapse_content', 'collapse_modifiers', 'test_accordion_basic_examples',
           'test_accordion_modifiers_examples', 'test_accordion_basic_fasthtml_examples',
           'test_accordion_arrow_fasthtml_examples', 'test_accordion_plus_fasthtml_examples',
           'test_accordion_join_fasthtml_examples', 'test_collapse_basic_fasthtml_examples',
           'test_collapse_style_fasthtml_examples', 'test_collapse_state_fasthtml_examples',
           'test_collapse_color_fasthtml_examples']

# %% ../../../nbs/components/data_display/accordion_collapse.ipynb 3
from typing import Optional, Dict, Any, Union, List
from cjm_fasthtml_tailwind.core.base import (
    SingleValueFactory, BaseFactory, combine_classes
)
from cjm_fasthtml_tailwind.builders.scales import SimpleFactory

from fasthtml.jupyter import JupyUvi, HTMX
from ...core.testing import create_test_app, create_test_page, start_test_server

from fasthtml.common import Div
from ...core.themes import DaisyUITheme
from IPython.display import display

# %% ../../../nbs/components/data_display/accordion_collapse.ipynb 6
collapse = SingleValueFactory("collapse", "Collapse/accordion container component") # Collapse container
collapse_title = SingleValueFactory("collapse-title", "Title part of collapse") # Collapse title
collapse_content = SingleValueFactory("collapse-content", "Content part of collapse") # Collapse content

# %% ../../../nbs/components/data_display/accordion_collapse.ipynb 8
collapse_modifiers = SimpleFactory(
    {
        "arrow": "collapse-arrow",
        "plus": "collapse-plus",
        "open": "collapse-open",
        "close": "collapse-close"
    },
    "Collapse modifiers (arrow icon, plus/minus icon, force open/close)"
) # Collapse modifiers

# %% ../../../nbs/components/data_display/accordion_collapse.ipynb 10
def test_accordion_basic_examples():
    """Test basic accordion utilities."""
    # Basic components
    assert str(collapse) == "collapse"
    assert str(collapse_title) == "collapse-title"
    assert str(collapse_content) == "collapse-content"
    
    # With modifiers
    assert str(collapse.hover) == "hover:collapse"
    assert str(collapse_title.md) == "md:collapse-title"
    assert str(collapse_content.dark) == "dark:collapse-content"

# Run the tests
test_accordion_basic_examples()

# %% ../../../nbs/components/data_display/accordion_collapse.ipynb 11
def test_accordion_modifiers_examples():
    """Test accordion modifier utilities."""
    assert str(collapse_modifiers.arrow) == "collapse-arrow"
    assert str(collapse_modifiers.plus) == "collapse-plus"
    assert str(collapse_modifiers.open) == "collapse-open"
    assert str(collapse_modifiers.close) == "collapse-close"
    
    # With responsive modifiers
    assert str(collapse_modifiers.arrow.hover) == "hover:collapse-arrow"
    assert str(collapse_modifiers.plus.focus) == "focus:collapse-plus"

# Run the tests
test_accordion_modifiers_examples()

# %% ../../../nbs/components/data_display/accordion_collapse.ipynb 12
def test_accordion_basic_fasthtml_examples():
    """Test basic accordion using radio inputs from daisyUI v5 documentation."""
    from fasthtml.common import Div, Input
    from cjm_fasthtml_tailwind.utilities.borders import border
    from cjm_fasthtml_tailwind.utilities.typography import font, text
    from cjm_fasthtml_daisyui.core.utility_classes import bg_dui, border_dui
    
    # First accordion item
    accordion_item_1 = Div(
        Input(type="radio", name="my-accordion-1", checked="checked"),
        Div("How do I create an account?", cls=combine_classes(collapse_title, font.semibold)),
        Div(
            'Click the "Sign Up" button in the top right corner and follow the registration process.',
            cls=combine_classes(collapse_content, text.sm)
        ),
        cls=combine_classes(collapse, bg_dui.base_100, border(), border_dui.base_300)
    )
    assert "collapse" in accordion_item_1.attrs['class']
    assert "bg-base-100" in accordion_item_1.attrs['class']
    assert "border" in accordion_item_1.attrs['class']
    assert "border-base-300" in accordion_item_1.attrs['class']
    assert accordion_item_1.children[0].attrs['type'] == "radio"
    assert accordion_item_1.children[0].attrs['name'] == "my-accordion-1"
    assert accordion_item_1.children[0].attrs['checked'] == "checked"
    assert "collapse-title" in accordion_item_1.children[1].attrs['class']
    assert "font-semibold" in accordion_item_1.children[1].attrs['class']
    assert accordion_item_1.children[1].children[0] == "How do I create an account?"
    assert "collapse-content" in accordion_item_1.children[2].attrs['class']
    assert "text-sm" in accordion_item_1.children[2].attrs['class']
    
    # Second accordion item
    accordion_item_2 = Div(
        Input(type="radio", name="my-accordion-1"),
        Div("I forgot my password. What should I do?", cls=combine_classes(collapse_title, font.semibold)),
        Div(
            'Click on "Forgot Password" on the login page and follow the instructions sent to your email.',
            cls=combine_classes(collapse_content, text.sm)
        ),
        cls=combine_classes(collapse, bg_dui.base_100, border(), border_dui.base_300)
    )
    assert accordion_item_2.children[0].attrs['name'] == "my-accordion-1"
    assert 'checked' not in accordion_item_2.children[0].attrs
    
    # Third accordion item
    accordion_item_3 = Div(
        Input(type="radio", name="my-accordion-1"),
        Div("How do I update my profile information?", cls=combine_classes(collapse_title, font.semibold)),
        Div(
            'Go to "My Account" settings and select "Edit Profile" to make changes.',
            cls=combine_classes(collapse_content, text.sm)
        ),
        cls=combine_classes(collapse, bg_dui.base_100, border(), border_dui.base_300)
    )
    assert accordion_item_3.children[1].children[0] == "How do I update my profile information?"
    assert accordion_item_3.children[2].children[0] == 'Go to "My Account" settings and select "Edit Profile" to make changes.'
    
    # Test that all items share the same radio group name
    assert accordion_item_1.children[0].attrs['name'] == accordion_item_2.children[0].attrs['name']
    assert accordion_item_2.children[0].attrs['name'] == accordion_item_3.children[0].attrs['name']
    
    # Return the accordion items in a Div
    return Div(accordion_item_1, accordion_item_2, accordion_item_3)

# Run the tests
test_accordion_basic_fasthtml_examples()

# %% ../../../nbs/components/data_display/accordion_collapse.ipynb 14
def test_accordion_arrow_fasthtml_examples():
    """Test accordion with arrow icon from daisyUI v5 documentation."""
    from fasthtml.common import Div, Input
    from cjm_fasthtml_tailwind.utilities.borders import border
    from cjm_fasthtml_tailwind.utilities.typography import font, text
    from cjm_fasthtml_daisyui.core.utility_classes import bg_dui, border_dui
    
    # First accordion item with arrow
    accordion_arrow_1 = Div(
        Input(type="radio", name="my-accordion-2", checked="checked"),
        Div("How do I create an account?", cls=combine_classes(collapse_title, font.semibold)),
        Div(
            'Click the "Sign Up" button in the top right corner and follow the registration process.',
            cls=combine_classes(collapse_content, text.sm)
        ),
        cls=combine_classes(collapse, collapse_modifiers.arrow, bg_dui.base_100, border(), border_dui.base_300)
    )
    assert "collapse" in accordion_arrow_1.attrs['class']
    assert "collapse-arrow" in accordion_arrow_1.attrs['class']
    assert "bg-base-100" in accordion_arrow_1.attrs['class']
    assert "border" in accordion_arrow_1.attrs['class']
    assert "border-base-300" in accordion_arrow_1.attrs['class']
    assert accordion_arrow_1.children[0].attrs['type'] == "radio"
    assert accordion_arrow_1.children[0].attrs['name'] == "my-accordion-2"
    assert accordion_arrow_1.children[0].attrs['checked'] == "checked"
    
    # Second accordion item with arrow
    accordion_arrow_2 = Div(
        Input(type="radio", name="my-accordion-2"),
        Div("I forgot my password. What should I do?", cls=combine_classes(collapse_title, font.semibold)),
        Div(
            'Click on "Forgot Password" on the login page and follow the instructions sent to your email.',
            cls=combine_classes(collapse_content, text.sm)
        ),
        cls=combine_classes(collapse, collapse_modifiers.arrow, bg_dui.base_100, border(), border_dui.base_300)
    )
    assert "collapse-arrow" in accordion_arrow_2.attrs['class']
    assert accordion_arrow_2.children[0].attrs['name'] == "my-accordion-2"
    assert 'checked' not in accordion_arrow_2.children[0].attrs
    
    # Third accordion item with arrow
    accordion_arrow_3 = Div(
        Input(type="radio", name="my-accordion-2"),
        Div("How do I update my profile information?", cls=combine_classes(collapse_title, font.semibold)),
        Div(
            'Go to "My Account" settings and select "Edit Profile" to make changes.',
            cls=combine_classes(collapse_content, text.sm)
        ),
        cls=combine_classes(collapse, collapse_modifiers.arrow, bg_dui.base_100, border(), border_dui.base_300)
    )
    assert "collapse-arrow" in accordion_arrow_3.attrs['class']
    assert accordion_arrow_3.children[1].children[0] == "How do I update my profile information?"
    
    # Test that all arrow items share the same radio group name
    assert accordion_arrow_1.children[0].attrs['name'] == accordion_arrow_2.children[0].attrs['name']
    assert accordion_arrow_2.children[0].attrs['name'] == accordion_arrow_3.children[0].attrs['name']
    
    # Return the accordion items in a Div
    return Div(accordion_arrow_1, accordion_arrow_2, accordion_arrow_3)

# Run the tests
test_accordion_arrow_fasthtml_examples()

# %% ../../../nbs/components/data_display/accordion_collapse.ipynb 16
def test_accordion_plus_fasthtml_examples():
    """Test accordion with plus/minus icon from daisyUI v5 documentation."""
    from fasthtml.common import Div, Input
    from cjm_fasthtml_tailwind.utilities.borders import border
    from cjm_fasthtml_tailwind.utilities.typography import font, text
    from cjm_fasthtml_daisyui.core.utility_classes import bg_dui, border_dui
    
    # First accordion item with plus/minus
    accordion_plus_1 = Div(
        Input(type="radio", name="my-accordion-3", checked="checked"),
        Div("How do I create an account?", cls=combine_classes(collapse_title, font.semibold)),
        Div(
            'Click the "Sign Up" button in the top right corner and follow the registration process.',
            cls=combine_classes(collapse_content, text.sm)
        ),
        cls=combine_classes(collapse, collapse_modifiers.plus, bg_dui.base_100, border(), border_dui.base_300)
    )
    assert "collapse" in accordion_plus_1.attrs['class']
    assert "collapse-plus" in accordion_plus_1.attrs['class']
    assert "bg-base-100" in accordion_plus_1.attrs['class']
    assert "border" in accordion_plus_1.attrs['class']
    assert "border-base-300" in accordion_plus_1.attrs['class']
    assert accordion_plus_1.children[0].attrs['type'] == "radio"
    assert accordion_plus_1.children[0].attrs['name'] == "my-accordion-3"
    assert accordion_plus_1.children[0].attrs['checked'] == "checked"
    
    # Second accordion item with plus/minus
    accordion_plus_2 = Div(
        Input(type="radio", name="my-accordion-3"),
        Div("I forgot my password. What should I do?", cls=combine_classes(collapse_title, font.semibold)),
        Div(
            'Click on "Forgot Password" on the login page and follow the instructions sent to your email.',
            cls=combine_classes(collapse_content, text.sm)
        ),
        cls=combine_classes(collapse, collapse_modifiers.plus, bg_dui.base_100, border(), border_dui.base_300)
    )
    assert "collapse-plus" in accordion_plus_2.attrs['class']
    assert accordion_plus_2.children[0].attrs['name'] == "my-accordion-3"
    assert 'checked' not in accordion_plus_2.children[0].attrs
    
    # Third accordion item with plus/minus
    accordion_plus_3 = Div(
        Input(type="radio", name="my-accordion-3"),
        Div("How do I update my profile information?", cls=combine_classes(collapse_title, font.semibold)),
        Div(
            'Go to "My Account" settings and select "Edit Profile" to make changes.',
            cls=combine_classes(collapse_content, text.sm)
        ),
        cls=combine_classes(collapse, collapse_modifiers.plus, bg_dui.base_100, border(), border_dui.base_300)
    )
    assert "collapse-plus" in accordion_plus_3.attrs['class']
    assert accordion_plus_3.children[1].children[0] == "How do I update my profile information?"
    assert accordion_plus_3.children[2].children[0] == 'Go to "My Account" settings and select "Edit Profile" to make changes.'
    
    # Test that all plus items share the same radio group name
    assert accordion_plus_1.children[0].attrs['name'] == accordion_plus_2.children[0].attrs['name']
    assert accordion_plus_2.children[0].attrs['name'] == accordion_plus_3.children[0].attrs['name']
    
    # Return the accordion items in a Div
    return Div(accordion_plus_1, accordion_plus_2, accordion_plus_3)

# Run the tests
test_accordion_plus_fasthtml_examples()

# %% ../../../nbs/components/data_display/accordion_collapse.ipynb 18
def test_accordion_join_fasthtml_examples():
    """Test accordion with join from daisyUI v5 documentation."""
    from fasthtml.common import Div, Input
    from cjm_fasthtml_tailwind.utilities.borders import border
    from cjm_fasthtml_tailwind.utilities.typography import font, text
    from cjm_fasthtml_daisyui.core.utility_classes import bg_dui, border_dui
    
    # Accordion group using Join
    accordion_join = Div(
        Div(
            Input(type="radio", name="my-accordion-4", checked="checked"),
            Div("How do I create an account?", cls=combine_classes(collapse_title, font.semibold)),
            Div(
                'Click the "Sign Up" button in the top right corner and follow the registration process.',
                cls=combine_classes(collapse_content, text.sm)
            ),
            cls=combine_classes(collapse, collapse_modifiers.arrow, "join-item", border_dui.base_300, border())
        ),
        Div(
            Input(type="radio", name="my-accordion-4"),
            Div("I forgot my password. What should I do?", cls=combine_classes(collapse_title, font.semibold)),
            Div(
                'Click on "Forgot Password" on the login page and follow the instructions sent to your email.',
                cls=combine_classes(collapse_content, text.sm)
            ),
            cls=combine_classes(collapse, collapse_modifiers.arrow, "join-item", border_dui.base_300, border())
        ),
        Div(
            Input(type="radio", name="my-accordion-4"),
            Div("How do I update my profile information?", cls=combine_classes(collapse_title, font.semibold)),
            Div(
                'Go to "My Account" settings and select "Edit Profile" to make changes.',
                cls=combine_classes(collapse_content, text.sm)
            ),
            cls=combine_classes(collapse, collapse_modifiers.arrow, "join-item", border_dui.base_300, border())
        ),
        cls=combine_classes("join", "join-vertical", bg_dui.base_100)
    )
    
    # Verify container structure
    assert "join" in accordion_join.attrs['class']
    assert "join-vertical" in accordion_join.attrs['class']
    assert "bg-base-100" in accordion_join.attrs['class']
    
    # Verify first accordion item
    item_1 = accordion_join.children[0]
    assert "collapse" in item_1.attrs['class']
    assert "collapse-arrow" in item_1.attrs['class']
    assert "join-item" in item_1.attrs['class']
    assert "border-base-300" in item_1.attrs['class']
    assert "border" in item_1.attrs['class']
    assert item_1.children[0].attrs['type'] == "radio"
    assert item_1.children[0].attrs['name'] == "my-accordion-4"
    assert item_1.children[0].attrs['checked'] == "checked"
    assert item_1.children[1].children[0] == "How do I create an account?"
    
    # Verify second accordion item
    item_2 = accordion_join.children[1]
    assert "collapse" in item_2.attrs['class']
    assert "collapse-arrow" in item_2.attrs['class']
    assert "join-item" in item_2.attrs['class']
    assert item_2.children[0].attrs['name'] == "my-accordion-4"
    assert 'checked' not in item_2.children[0].attrs
    assert item_2.children[1].children[0] == "I forgot my password. What should I do?"
    
    # Verify third accordion item
    item_3 = accordion_join.children[2]
    assert "collapse" in item_3.attrs['class']
    assert "collapse-arrow" in item_3.attrs['class']
    assert "join-item" in item_3.attrs['class']
    assert item_3.children[0].attrs['name'] == "my-accordion-4"
    assert 'checked' not in item_3.children[0].attrs
    assert item_3.children[1].children[0] == "How do I update my profile information?"
    
    # Test that all items share the same radio group name
    assert item_1.children[0].attrs['name'] == item_2.children[0].attrs['name']
    assert item_2.children[0].attrs['name'] == item_3.children[0].attrs['name']
    
    # Return the accordion join in a Div (it's already a container, but returning for consistency)
    return accordion_join

# Run the tests
test_accordion_join_fasthtml_examples()

# %% ../../../nbs/components/data_display/accordion_collapse.ipynb 24
def test_collapse_basic_fasthtml_examples():
    """Test basic collapse examples: focus, checkbox, and details/summary from daisyUI v5 documentation."""
    from fasthtml.common import Div, Input, Details, Summary
    from cjm_fasthtml_tailwind.utilities.borders import border
    from cjm_fasthtml_tailwind.utilities.typography import font, text
    from cjm_fasthtml_daisyui.core.utility_classes import bg_dui, border_dui
    
    # Collapse with focus (tabindex)
    focus_collapse = Div(
        Div("How do I create an account?", cls=combine_classes(collapse_title, font.semibold)),
        Div(
            'Click the "Sign Up" button in the top right corner and follow the registration process.',
            cls=combine_classes(collapse_content, text.sm)
        ),
        tabindex="0",
        cls=combine_classes(collapse, bg_dui.base_100, border_dui.base_300, border())
    )
    assert focus_collapse.attrs['tabindex'] == "0"
    assert "collapse" in focus_collapse.attrs['class']
    assert "bg-base-100" in focus_collapse.attrs['class']
    assert "border-base-300" in focus_collapse.attrs['class']
    assert "border" in focus_collapse.attrs['class']
    assert "collapse-title" in focus_collapse.children[0].attrs['class']
    assert "font-semibold" in focus_collapse.children[0].attrs['class']
    assert focus_collapse.children[0].children[0] == "How do I create an account?"
    assert "collapse-content" in focus_collapse.children[1].attrs['class']
    assert "text-sm" in focus_collapse.children[1].attrs['class']
    
    # Collapse with checkbox
    checkbox_collapse = Div(
        Input(type="checkbox"),
        Div("How do I create an account?", cls=combine_classes(collapse_title, font.semibold)),
        Div(
            'Click the "Sign Up" button in the top right corner and follow the registration process.',
            cls=combine_classes(collapse_content, text.sm)
        ),
        cls=combine_classes(collapse, bg_dui.base_100, border_dui.base_300, border())
    )
    assert checkbox_collapse.children[0].tag == "input"
    assert checkbox_collapse.children[0].attrs['type'] == "checkbox"
    assert "collapse" in checkbox_collapse.attrs['class']
    assert "bg-base-100" in checkbox_collapse.attrs['class']
    assert "border-base-300" in checkbox_collapse.attrs['class']
    assert "border" in checkbox_collapse.attrs['class']
    assert "collapse-title" in checkbox_collapse.children[1].attrs['class']
    assert "collapse-content" in checkbox_collapse.children[2].attrs['class']
    
    # Collapse using details and summary tag
    details_collapse = Details(
        Summary("How do I create an account?", cls=combine_classes(collapse_title, font.semibold)),
        Div(
            'Click the "Sign Up" button in the top right corner and follow the registration process.',
            cls=combine_classes(collapse_content, text.sm)
        ),
        cls=combine_classes(collapse, bg_dui.base_100, border_dui.base_300, border())
    )
    assert details_collapse.tag == "details"
    assert details_collapse.children[0].tag == "summary"
    assert "collapse" in details_collapse.attrs['class']
    assert "bg-base-100" in details_collapse.attrs['class']
    assert "border-base-300" in details_collapse.attrs['class']
    assert "border" in details_collapse.attrs['class']
    assert "collapse-title" in details_collapse.children[0].attrs['class']
    assert "font-semibold" in details_collapse.children[0].attrs['class']
    assert details_collapse.children[0].children[0] == "How do I create an account?"
    assert "collapse-content" in details_collapse.children[1].attrs['class']
    assert "text-sm" in details_collapse.children[1].attrs['class']
    
    # Return all collapse examples in a Div
    return Div(focus_collapse, checkbox_collapse, details_collapse)

# Run the tests
test_collapse_basic_fasthtml_examples()

# %% ../../../nbs/components/data_display/accordion_collapse.ipynb 26
def test_collapse_style_fasthtml_examples():
    """Test collapse style examples: without border/background, with arrow icon, with plus/minus icon from daisyUI v5 documentation."""
    from fasthtml.common import Div, Input
    from cjm_fasthtml_tailwind.utilities.borders import border
    from cjm_fasthtml_tailwind.utilities.typography import font, text
    from cjm_fasthtml_daisyui.core.utility_classes import bg_dui, border_dui
    
    # Collapse without border and background
    minimal_collapse = Div(
        Div("How do I create an account?", cls=combine_classes(collapse_title, font.semibold)),
        Div(
            'Click the "Sign Up" button in the top right corner and follow the registration process.',
            cls=combine_classes(collapse_content, text.sm)
        ),
        tabindex="0",
        cls=str(collapse)
    )
    assert minimal_collapse.attrs['tabindex'] == "0"
    assert minimal_collapse.attrs['class'] == "collapse"
    assert "collapse-title" in minimal_collapse.children[0].attrs['class']
    assert "font-semibold" in minimal_collapse.children[0].attrs['class']
    assert minimal_collapse.children[0].children[0] == "How do I create an account?"
    assert "collapse-content" in minimal_collapse.children[1].attrs['class']
    assert "text-sm" in minimal_collapse.children[1].attrs['class']
    
    # Collapse with arrow icon
    arrow_collapse = Div(
        Div("How do I create an account?", cls=combine_classes(collapse_title, font.semibold)),
        Div(
            'Click the "Sign Up" button in the top right corner and follow the registration process.',
            cls=combine_classes(collapse_content, text.sm)
        ),
        tabindex="0",
        cls=combine_classes(collapse, collapse_modifiers.arrow, bg_dui.base_100, border_dui.base_300, border())
    )
    assert arrow_collapse.attrs['tabindex'] == "0"
    assert "collapse" in arrow_collapse.attrs['class']
    assert "collapse-arrow" in arrow_collapse.attrs['class']
    assert "bg-base-100" in arrow_collapse.attrs['class']
    assert "border-base-300" in arrow_collapse.attrs['class']
    assert "border" in arrow_collapse.attrs['class']
    assert "collapse-title" in arrow_collapse.children[0].attrs['class']
    assert "collapse-content" in arrow_collapse.children[1].attrs['class']
    
    # Collapse with plus/minus icon
    plus_collapse = Div(
        Div("How do I create an account?", cls=combine_classes(collapse_title, font.semibold)),
        Div(
            'Click the "Sign Up" button in the top right corner and follow the registration process.',
            cls=combine_classes(collapse_content, text.sm)
        ),
        tabindex="0",
        cls=combine_classes(collapse, collapse_modifiers.plus, bg_dui.base_100, border_dui.base_300, border())
    )
    assert plus_collapse.attrs['tabindex'] == "0"
    assert "collapse" in plus_collapse.attrs['class']
    assert "collapse-plus" in plus_collapse.attrs['class']
    assert "bg-base-100" in plus_collapse.attrs['class']
    assert "border-base-300" in plus_collapse.attrs['class']
    assert "border" in plus_collapse.attrs['class']
    assert "collapse-title" in plus_collapse.children[0].attrs['class']
    assert "font-semibold" in plus_collapse.children[0].attrs['class']
    assert plus_collapse.children[0].children[0] == "How do I create an account?"
    assert "collapse-content" in plus_collapse.children[1].attrs['class']
    assert "text-sm" in plus_collapse.children[1].attrs['class']
    
    # Return all collapse style examples in a Div
    return Div(minimal_collapse, arrow_collapse, plus_collapse)

# Run the tests
test_collapse_style_fasthtml_examples()

# %% ../../../nbs/components/data_display/accordion_collapse.ipynb 28
def test_collapse_state_fasthtml_examples():
    """Test collapse state examples: force open and force close from daisyUI v5 documentation."""
    from fasthtml.common import Div
    from cjm_fasthtml_tailwind.utilities.borders import border 
    from cjm_fasthtml_tailwind.utilities.typography import font, text
    from cjm_fasthtml_daisyui.core.utility_classes import bg_dui, border_dui
    
    # Force open collapse
    open_collapse = Div(
        Div("I have collapse-open class", cls=combine_classes(collapse_title, font.semibold)),
        Div(
            'Click the "Sign Up" button in the top right corner and follow the registration process.',
            cls=combine_classes(collapse_content, text.sm)
        ),
        tabindex="0",
        cls=combine_classes(collapse, collapse_modifiers.open, bg_dui.base_100, border_dui.base_300, border())
    )
    assert open_collapse.attrs['tabindex'] == "0"
    assert "collapse" in open_collapse.attrs['class']
    assert "collapse-open" in open_collapse.attrs['class']
    assert "bg-base-100" in open_collapse.attrs['class']
    assert "border-base-300" in open_collapse.attrs['class']
    assert "border" in open_collapse.attrs['class']
    assert "collapse-title" in open_collapse.children[0].attrs['class']
    assert "font-semibold" in open_collapse.children[0].attrs['class']
    assert open_collapse.children[0].children[0] == "I have collapse-open class"
    assert "collapse-content" in open_collapse.children[1].attrs['class']
    assert "text-sm" in open_collapse.children[1].attrs['class']
    
    # Force close collapse  
    close_collapse = Div(
        Div("I have collapse-close class", cls=combine_classes(collapse_title, font.semibold)),
        Div(
            'Click the "Sign Up" button in the top right corner and follow the registration process.',
            cls=combine_classes(collapse_content, text.sm)
        ),
        tabindex="0",
        cls=combine_classes(collapse, collapse_modifiers.close, bg_dui.base_100, border_dui.base_300, border())
    )
    assert close_collapse.attrs['tabindex'] == "0"
    assert "collapse" in close_collapse.attrs['class']
    assert "collapse-close" in close_collapse.attrs['class']
    assert "bg-base-100" in close_collapse.attrs['class']
    assert "border-base-300" in close_collapse.attrs['class']
    assert "border" in close_collapse.attrs['class']
    assert "collapse-title" in close_collapse.children[0].attrs['class']
    assert "font-semibold" in close_collapse.children[0].attrs['class']
    assert close_collapse.children[0].children[0] == "I have collapse-close class"
    assert "collapse-content" in close_collapse.children[1].attrs['class']
    assert "text-sm" in close_collapse.children[1].attrs['class']
    
    # Return both collapse state examples in a Div
    return Div(open_collapse, close_collapse)

# Run the tests
test_collapse_state_fasthtml_examples()

# %% ../../../nbs/components/data_display/accordion_collapse.ipynb 30
def test_collapse_color_fasthtml_examples():
    """Test collapse color examples: custom colors for focus and checkbox from daisyUI v5 documentation."""
    from fasthtml.common import Div, Input
    from cjm_fasthtml_tailwind.utilities.borders import border
    from cjm_fasthtml_tailwind.utilities.typography import font, text
    from cjm_fasthtml_daisyui.core.utility_classes import bg_dui, border_dui, text_dui
    
    # Custom colors for collapse that works with focus
    custom_focus_collapse = Div(
        Div("How do I create an account?", cls=combine_classes(collapse_title, font.semibold)),
        Div(
            'Click the "Sign Up" button in the top right corner and follow the registration process.',
            cls=combine_classes(collapse_content, text.sm)
        ),
        tabindex="0",
        cls=combine_classes(
            bg_dui.primary,
            text_dui.primary_content,
            bg_dui.secondary.focus,
            text_dui.secondary_content.focus,
            collapse
        )
    )
    assert custom_focus_collapse.attrs['tabindex'] == "0"
    assert "collapse" in custom_focus_collapse.attrs['class']
    assert "bg-primary" in custom_focus_collapse.attrs['class']
    assert "text-primary-content" in custom_focus_collapse.attrs['class']
    assert "focus:bg-secondary" in custom_focus_collapse.attrs['class']
    assert "focus:text-secondary-content" in custom_focus_collapse.attrs['class']
    assert "collapse-title" in custom_focus_collapse.children[0].attrs['class']
    assert "font-semibold" in custom_focus_collapse.children[0].attrs['class']
    assert custom_focus_collapse.children[0].children[0] == "How do I create an account?"
    assert "collapse-content" in custom_focus_collapse.children[1].attrs['class']
    assert "text-sm" in custom_focus_collapse.children[1].attrs['class']
    
    # Custom colors for collapse that works with checkbox using peer
    custom_checkbox_collapse = Div(
        Input(type="checkbox", cls="peer"),
        Div(
            "How do I create an account?",
            cls=combine_classes(
                collapse_title,
                bg_dui.primary,
                text_dui.primary_content,
                bg_dui.secondary.peer("checked"),
                text_dui.secondary_content.peer("checked")
            )
        ),
        Div(
            'Click the "Sign Up" button in the top right corner and follow the registration process.',
            cls=combine_classes(
                collapse_content,
                bg_dui.primary,
                text_dui.primary_content,
                bg_dui.secondary.peer("checked"),
                text_dui.secondary_content.peer("checked")
            )
        ),
        cls=combine_classes(bg_dui.base_100, border_dui.base_300, collapse, border())
    )
    assert custom_checkbox_collapse.children[0].tag == "input"
    assert custom_checkbox_collapse.children[0].attrs['type'] == "checkbox"
    assert "peer" in custom_checkbox_collapse.children[0].attrs['class']
    assert "collapse" in custom_checkbox_collapse.attrs['class']
    assert "bg-base-100" in custom_checkbox_collapse.attrs['class']
    assert "border-base-300" in custom_checkbox_collapse.attrs['class']
    assert "border" in custom_checkbox_collapse.attrs['class']
    
    # Verify title styling
    assert "collapse-title" in custom_checkbox_collapse.children[1].attrs['class']
    assert "bg-primary" in custom_checkbox_collapse.children[1].attrs['class']
    assert "text-primary-content" in custom_checkbox_collapse.children[1].attrs['class']
    assert "peer-checked:bg-secondary" in custom_checkbox_collapse.children[1].attrs['class']
    assert "peer-checked:text-secondary-content" in custom_checkbox_collapse.children[1].attrs['class']
    assert custom_checkbox_collapse.children[1].children[0] == "How do I create an account?"
    
    # Verify content styling
    assert "collapse-content" in custom_checkbox_collapse.children[2].attrs['class']
    assert "bg-primary" in custom_checkbox_collapse.children[2].attrs['class']
    assert "text-primary-content" in custom_checkbox_collapse.children[2].attrs['class']
    assert "peer-checked:bg-secondary" in custom_checkbox_collapse.children[2].attrs['class']
    assert "peer-checked:text-secondary-content" in custom_checkbox_collapse.children[2].attrs['class']
    
    # Return both color examples in a Div
    return Div(custom_focus_collapse, custom_checkbox_collapse)

# Run the tests
test_collapse_color_fasthtml_examples()
