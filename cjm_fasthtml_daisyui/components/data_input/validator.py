"""Validator class changes the color of form elements to error or success based on input's validation rules."""

# AUTOGENERATED! DO NOT EDIT! File to edit: ../../../nbs/components/data_input/validator.ipynb.

# %% auto 0
__all__ = ['validator', 'validator_hint', 'test_validator_basic_examples']

# %% ../../../nbs/components/data_input/validator.ipynb 3
from cjm_fasthtml_tailwind.core.base import (
    SingleValueFactory, combine_classes
)

from fasthtml.common import Div
from fasthtml.jupyter import JupyUvi, HTMX
from ...core.testing import create_test_app, create_test_page, start_test_server
from ...core.themes import DaisyUITheme
from IPython.display import display

# %% ../../../nbs/components/data_input/validator.ipynb 5
validator = SingleValueFactory("validator", "Base validator component for input, select, textarea") # Base validator component
validator_hint = SingleValueFactory("validator-hint", "Base validator hint part for the hint text that appears after the input if it's invalid") # validator_hint component

# %% ../../../nbs/components/data_input/validator.ipynb 7
def test_validator_basic_examples():
    """Test basic validator utilities."""
    # Basic validator
    assert str(validator) == "validator"
    assert str(validator_hint) == "validator-hint"
    
    # Test with modifiers
    assert str(validator.hover) == "hover:validator"
    assert str(validator.md) == "md:validator"
    assert str(validator.dark) == "dark:validator"

    assert str(validator_hint.hover) == "hover:validator-hint"
    assert str(validator_hint.md) == "md:validator-hint"
    assert str(validator_hint.dark) == "dark:validator-hint"

# Run the tests
test_validator_basic_examples()
