"""Label is used to provide a name or title for an input field. Label can be placed before or after the field."""

# AUTOGENERATED! DO NOT EDIT! File to edit: ../../../nbs/components/data_input/label.ipynb.

# %% auto 0
__all__ = ['label', 'floating_label', 'test_label_basic_examples']

# %% ../../../nbs/components/data_input/label.ipynb 3
from cjm_fasthtml_tailwind.core.base import (
    SingleValueFactory, combine_classes
)

from fasthtml.common import Div
from fasthtml.jupyter import JupyUvi, HTMX
from ...core.testing import create_test_app, create_test_page, start_test_server
from ...core.themes import DaisyUITheme
from IPython.display import display

# %% ../../../nbs/components/data_input/label.ipynb 5
label = SingleValueFactory("label", "Base label component for styling the text next to an input field (or select)") # Base label component
floating_label = SingleValueFactory("floating-label", "Floating label component for the parent of an input field (or select) and a span that floats above the input field when the field is focused") # Base floating label component

# %% ../../../nbs/components/data_input/label.ipynb 7
def test_label_basic_examples():
    """Test basic label utilities."""
    # Basic label
    assert str(label) == "label"
    assert str(floating_label) == "floating-label"
    
    # Test with modifiers
    assert str(label.hover) == "hover:label"
    assert str(label.md) == "md:label"
    assert str(label.dark) == "dark:label"

    # Test with modifiers
    assert str(floating_label.hover) == "hover:floating-label"
    assert str(floating_label.md) == "md:floating-label"
    assert str(floating_label.dark) == "dark:floating-label"

# Run the tests
test_label_basic_examples()
