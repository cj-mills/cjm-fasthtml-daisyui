"""Filter is a group of radio buttons. Choosing one of the options will hide the others and shows a reset button next to the chosen option."""

# AUTOGENERATED! DO NOT EDIT! File to edit: ../../../nbs/components/data_input/filter.ipynb.

# %% auto 0
__all__ = ['filter_dui', 'filter_dui_reset', 'test_filter_basic_examples']

# %% ../../../nbs/components/data_input/filter.ipynb 3
from cjm_fasthtml_tailwind.core.base import (
    SingleValueFactory, combine_classes
)

from fasthtml.common import Div
from fasthtml.jupyter import JupyUvi, HTMX
from ...core.testing import create_test_app, create_test_page, start_test_server
from ...core.themes import DaisyUITheme
from IPython.display import display

# %% ../../../nbs/components/data_input/filter.ipynb 5
filter_dui = SingleValueFactory("filter", "Base filter component for a HTML <form> or a <div> element that includes radio buttons for filtering items") # Base filter component
filter_dui_reset = SingleValueFactory("filter-reset", "Filter reset part as an alternative to the reset button if you can't use a HTML form") # Filter reset part

# %% ../../../nbs/components/data_input/filter.ipynb 7
def test_filter_basic_examples():
    """Test basic filter utilities."""
    # Basic filter
    assert str(filter_dui) == "filter"
    assert str(filter_dui_reset) == "filter-reset"
    
    # Test with modifiers
    assert str(filter_dui.hover) == "hover:filter"
    assert str(filter_dui.md) == "md:filter"
    assert str(filter_dui.dark) == "dark:filter"

# Run the tests
test_filter_basic_examples()
